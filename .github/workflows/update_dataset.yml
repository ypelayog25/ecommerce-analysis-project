name: Update Dataset and Run Analysis

on:
  schedule:
    # Ejecuta todos los dÃ­as a medianoche UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # Para poder hacer push con token

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install kaggle pandas numpy matplotlib seaborn tableau-api-lib

      - name: Setup Kaggle API
        run: |
          mkdir -p ~/.kaggle
          echo "${{ secrets.KAGGLE_JSON }}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Check for dataset update
        id: check_update
        run: |
          kaggle datasets metadata nabihazahid/ecommerce-dataset-for-sql-analysis > data/raw/metadata.json
          latest_hash=$(jq -r '.lastUpdated' data/raw/metadata.json)
          if [ -f data/raw/.dataset_hash.txt ]; then
            old_hash=$(cat data/raw/.dataset_hash.txt)
          else
            old_hash=""
          fi
          echo "LATEST_HASH=$latest_hash" >> $GITHUB_ENV
          echo "OLD_HASH=$old_hash" >> $GITHUB_ENV
          if [ "$latest_hash" = "$old_hash" ]; then
            echo "Dataset is up to date. Skipping download and analysis."
            exit 0
          fi

      - name: Download dataset from Kaggle
        if: steps.check_update.outcome != 'success'
        run: |
          kaggle datasets download -d nabihazahid/ecommerce-dataset-for-sql-analysis -p ./data/raw --unzip

      - name: Update dataset hash
        if: steps.check_update.outcome != 'success'
        run: |
          echo "${{ env.LATEST_HASH }}" > data/raw/.dataset_hash.txt

      - name: Run analysis script
        if: steps.check_update.outcome != 'success'
        run: |
          python src/analysis_pipeline.py

      - name: Commit and push results
        if: steps.check_update.outcome != 'success'
        run: |
          git config --global user.name "Yenismara Pelayo Garcia"
          git config --global user.email "ypelayog25@gmail.com"
          git add data/processed reports/
          git commit -m "chore: update analysis results after dataset update"
          git push https://$GITHUB_TOKEN@github.com/ypelayog25/ecommerce-analysis-project.git main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
